{"version":3,"sources":["scripts/main.js"],"names":["tree","document","querySelector","lists","querySelectorAll","filter","li","children","length","list","span","createElement","classList","add","textContent","firstChild","trim","replaceWith","addEventListener","clickEvent","target","className","nextElementSibling","hidden"],"mappings":";AAAA,aAgBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAbA,IAaA,EAbMA,EAAOC,SAASC,cAAc,SAC9BC,EAAQ,EAAIF,SAASG,iBAAiB,OACzCC,OAAO,SAAAC,GAAMA,OAAAA,EAAGC,SAASC,OAAS,IAElBL,EAAAA,EAAAA,GASnB,IAT0B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfM,IAAAA,EAAe,EAAA,MAClBC,EAAOT,SAASU,cAAc,QAEpCD,EAAKE,UAAUC,IAAI,UACnBH,EAAKI,YAAcL,EAAKM,WAAWD,YAAYE,OAE/CP,EAAKM,WAAWE,YAAYP,IAG9B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAAAV,EAAKkB,iBAAiB,QAAS,SAAAC,GACO,WAAhCA,EAAWC,OAAOC,YACpBF,EAAWC,OAAOE,mBAAmBC,QAClCJ,EAAWC,OAAOE,mBAAmBC","file":"main.2155432e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst tree = document.querySelector('.tree');\nconst lists = [...document.querySelectorAll('li')]\n  .filter(li => li.children.length > 0);\n\nfor (const list of lists) {\n  const span = document.createElement('span');\n\n  span.classList.add('hidden');\n  span.textContent = list.firstChild.textContent.trim();\n\n  list.firstChild.replaceWith(span);\n}\n\ntree.addEventListener('click', clickEvent => {\n  if (clickEvent.target.className === 'hidden') {\n    clickEvent.target.nextElementSibling.hidden\n    = !clickEvent.target.nextElementSibling.hidden;\n  }\n});\n"]}